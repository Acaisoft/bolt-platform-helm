# ----------------------------------------------
# GLOBAL ---------------------------------------
# ----------------------------------------------
global:
  id_rsa: |
    PLACEHOLDER
  id_rsa_pub: |
    PLACEHOLDER
  known_hosts: |
    PLACEHOLDER
  google_service_account: |
    PLACEHOLDER

# ----------------------------------------------
# API ------------------------------------------
# ----------------------------------------------
bolt-api:
  environment:
    CONFIG_VERSION: PLACEHOLDER
    HCE_DEBUG: '"PLACEHOLDER"'
    JWT_ALGORITHM: '"PLACEHOLDER"'
    JWT_VALID_PERIOD: PLACEHOLDER
    ARGO_CONTAINER_RESOURCES: '{"default":{"limits":{"cpu":"110m","memory":"220Mi"},"requests":{"cpu":"100m","memory":"200Mi"}},"master":{"limits":{"cpu":"410m","memory":"520Mi"},"requests":{"cpu":"400m","memory":"500Mi"}},"worker":{"limits":{"cpu":"840m","memory":"950Mi"},"requests":{"cpu":"800m","memory":"900Mi"}}}'

  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: 'true'
      nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
      nginx.ingress.kubernetes.io/proxy-connect-timeout: '240'
      nginx.ingress.kubernetes.io/proxy-read-timeout: '240'
      nginx.ingress.kubernetes.io/proxy-send-timeout: '240'
      nginx.ingress.kubernetes.io/ssl-redirect: 'true'
      nginx.ingress.kubernetes.io/tls-acme: 'true'
    hosts:
      - host: PLACEHOLDER
        paths:
          - path: /auth/
            pathType: Prefix
          - path: /static/
            pathType: Prefix
    tls:
      - secretName: PLACEHOLDER
        hosts:
          - PLACEHOLDER

  secrets: |
    GOOGLE_APPLICATION_CREDENTIALS = "PLACEHOLDER"
    HASURA_GRAPHQL_ACCESS_KEY = "PLACEHOLDER"
    SECRETS_VERSION = "PLACEHOLDER"
    SECRET_KEY = "PLACEHOLDER"
    AUTH_LOGIN = "PLACEHOLDER"
    AUTH_PASSWORD = "PLACEHOLDER"
    JWT_AUTH_PUB_KEY = "PLACEHOLDER"
    JWT_AUTH_PRIV_KEY = "PLACEHOLDER"

  replicaCount: 2
  resources:
    requests:
      cpu: 200m
      memory: 400Mi
    limits:
      cpu: 300m
      memory: 512Mi

# ----------------------------------------------
# PORTAL ---------------------------------------
# ----------------------------------------------
bolt-portal:
  replicaCount: 2

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/tls-acme: "true"
    hosts:
      - host: PLACEHOLDER
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: PLACEHOLDER
        hosts:
          - PLACEHOLDER

  resources:
    requests:
      cpu: 200m
      memory: 400Mi
    limits:
      cpu: 300m
      memory: 512Mi

# ----------------------------------------------
# ARGO WORKFLOWS -------------------------------
# ----------------------------------------------
argo-workflows:
  server:
    extraArgs: 
    - --auth-mode=client

    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        kubernetes.io/ingress.class: "nginx"
        kubernetes.io/tls-acme: "true"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/tls-acme: "true"
      hosts:
      - PLACEHOLDER
      tls:
      - secretName: PLACEHOLDER
        hosts:
        - PLACEHOLDER

# ----------------------------------------------
# HASURA ---------------------------------------
# ----------------------------------------------
hasura:
  jwtSecret: PLACEHOLDER
  corsDomain: '*'
  image:
    tag: v2.6.1.cli-migrations-v3
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
  dbUrl: 'PLACEHOLDER'
  adminSecret: 'PLACEHOLDER'
  devMode: 'true'
  enableRemoteSchemaPermission: 'false'
  extraEnvVarsCM:
    # put helm release name and kubernetes namespace in below URLs PLACEHOLDERs
    BOLT_API_GRAPHQL: http://PLACEHOLDER-bolt-api.PLACEHOLDER.svc.cluster.local/graphql
    BOLT_API_EXECUTION_STATE_CHANGE: http://PLACEHOLDER-bolt-api.PLACEHOLDER.svc.cluster.local/webhooks/execution/update
    BOLT_API_CONFIGURATION_PARAM_CHANGE: http://PLACEHOLDER-bolt-api.PLACEHOLDER.svc.cluster.local/webhooks/configuration_param/update
    BOLT_API_EXECUTION_REQUESTS_INSERT: http://PLACEHOLDER-bolt-api.PLACEHOLDER.svc.cluster.local/webhooks/execution_requests/insert
    BOLT_API_EXECUTION_STAGE_LOG_INSERT: http://PLACEHOLDER-bolt-api.PLACEHOLDER.svc.cluster.local/webhooks/execution_stage_log/insert
  ingress:
    enabled: true
    className: ""
    annotations:
      kubernetes.io/ingress.class: "nginx"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      kubernetes.io/tls-acme: 'true'
      nginx.ingress.kubernetes.io/tls-acme: 'true'
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "240"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "240"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "240"
    hosts:
      - host: PLACEHOLDER
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: PLACEHOLDER
        hosts:
        - PLACEHOLDER

# ----------------------------------------------
# INGRESS-NGINX --------------------------------
# ----------------------------------------------
ingress-nginx:
  defaultBackend:
    enabled: false
  controller:
    service:
      externalTrafficPolicy: Local
    metrics:
      enabled: true
    config:
      upstream-keepalive-timeout: "240"
    resources:
      requests:
        cpu: 300m
        memory: 400Mi
      limits:
        cpu: 400m
    autoscaling:
      enabled: true
      minReplicas: 2
      maxReplicas: 5
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage: 80
